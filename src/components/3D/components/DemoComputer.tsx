// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from "react";
import { useGLTF, useVideoTexture } from "@react-three/drei";
import gsap from "gsap";
import { useGSAP } from "@gsap/react";
import * as THREE from "three";


const DemoComputer = ({ texture, ...rest }: { texture?: string }) => {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF("/models/computer.glb");
  // const { actions } = useAnimations(animations, group);

  const txt = useVideoTexture(
    texture ? texture : "/textures/project/project1.mp4"
  );

  useEffect(() => {
    if (txt) {
      txt.flipY = false;
    }
  }, [txt]);

  useGSAP(() => {
    if (group.current) {
      gsap.from(group.current.rotation, {
        y: Math.PI / 2,
        duration: 1,
        ease: "power3.out",
      });
    }
  }, [txt]);

  return (
    <group ref={group} {...rest} dispose={null}>
      <group name="Scene">
        <group
          name="Monitor-B-_computer_0"
          position={[0.266, 1.132, 0.051]}
          rotation={[0, -0.033, 0]}
          scale={[0.042, 0.045, 0.045]}>
          <mesh
            name="Monitor-B-_computer_0_1"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_1'].geometry}
            material={materials.computer}
          />
          <mesh
            name="Monitor-B-_computer_0_2"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_2'].geometry}
            material={materials.base__0}
          />
          <mesh
            name="Monitor-B-_computer_0_3"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_3'].geometry}
            material={materials.Material_36}
          />
          <mesh
            name="Monitor-B-_computer_0_4"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_4'].geometry}
            material={materials.Material_35}
          />
          <mesh
            name="Monitor-B-_computer_0_5"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_5'].geometry}
            material={materials.Material_34}
          />
          <mesh
            name="Monitor-B-_computer_0_6"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_6'].geometry}
            material={materials.keys}
          />
          <mesh
            name="Monitor-B-_computer_0_7"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_7'].geometry}
            material={materials.keys2}
          />
          <mesh
            name="Monitor-B-_computer_0_8"
            castShadow
            receiveShadow
            geometry={nodes['Monitor-B-_computer_0_8'].geometry}
            material={materials.Material_37}
          />
        </group>
        <group
          name="Tower-light-007"
          position={[16.089, -3.47, -14.495]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.963}
        />
        <group
          name="Tower-light-008"
          position={[15.155, -3.47, -14.495]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.963}
        />
        <mesh
          name="monitor-screen"
          castShadow
          receiveShadow
          geometry={nodes['monitor-screen'].geometry}
          material={nodes['monitor-screen'].material}
          position={[0.127, 1.831, 0.511]}
          rotation={[1.571, -0.005, 0.031]}
          scale={[0.661, 0.608, 0.401]}
        />
      </group>
    </group>
  )
};

useGLTF.preload("/models/computer.glb");

export default DemoComputer;
